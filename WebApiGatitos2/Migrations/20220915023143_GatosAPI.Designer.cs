// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiGatos;

#nullable disable

namespace WebApiGatos.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220915023143_GatosAPI")]
    partial class GatosAPI
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApiGatos.Entidades.Gatos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DueñoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DueñoId");

                    b.ToTable("Gatos");
                });

            modelBuilder.Entity("WebApiGatos.Entidades.Dueño", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gatos");
                });

            modelBuilder.Entity("WebApiGatos.Entidades.Gatos", b =>
                {
                    b.HasOne("WebApiGatos.Entidades.Dueño", null)
                        .WithMany("Gatos")
                        .HasForeignKey("DueñoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiGatos.Entidades.Dueño", b =>
                {
                    b.Navigation("Gatos");
                });
#pragma warning restore 612, 618
        }
    }
}
